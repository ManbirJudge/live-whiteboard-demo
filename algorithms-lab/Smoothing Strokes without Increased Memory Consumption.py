import json
import random
from typing import List, Tuple, Dict

import cv2
import numpy as np
from matplotlib import pyplot as plt
from rdp import rdp


class Point:
    x: int
    y: int

    def __init__(self, x: int, y: int):
        self.x = x
        self.y = y


class Stroke:
    def __init__(
            self,
            points: List[Point] | None = None,
            tuple_points: List[Tuple[int, int]] | None = None,
            dict_points: List[Dict[str, int]] | None = None
    ) -> None:
        self.points: List[Point] = []

        if points is not None:
            self.points = points
        elif tuple_points is not None:
            self.points = [Point(point[0], point[1]) for point in tuple_points]
        elif dict_points is not None:
            self.points = [Point(point['x'], point['y']) for point in dict_points]

    def __len__(self):
        return len(self.points)

    def __str__(self) -> str:
        return str(self.to_py())

    def to_py(self) -> List[Tuple[int, int]]:
        return [(point.x, point.y) for point in self.points]

    def to_matplotlib(self) -> Tuple[List[int], List[int]]:
        return (
            [point.x for point in self.points],
            [point.y for point in self.points],
        )

    def plot(self):
        x, y = self.to_matplotlib()
        plt.plot(x, y)

    def save(self, title: str):
        self.plot()
        plt.savefig(title)
        plt.clf()


def chaikin_smooth(points: List[Tuple[int, int]], iterations: int = 5) -> List[Tuple[int, int]]:
    points = np.array(points)

    for _ in range(iterations):
        L = points.repeat(2, axis=0)
        R = np.empty_like(L)

        R[0] = L[0]
        R[2::2] = L[1:-1:2]
        R[1:-1:2] = L[2::2]
        R[-1] = L[-1]

        points = L * 0.75 + R * 0.25

    return points


with open(f'strokes/{random.randint(1, 8)}.json') as stroke_f:
    stroke = Stroke(dict_points=json.load(stroke_f))

stroke = Stroke(
    dict_points=[{"x": 448.5, "y": 176}, {"x": 445.5, "y": 185}, {"x": 418.5, "y": 241}, {"x": 389.5, "y": 285},
                 {"x": 333.5, "y": 349}, {"x": 276.5, "y": 398}, {"x": 6.5, "y": 288}, {"x": 61.5, "y": 248},
                 {"x": 126.5, "y": 207}, {"x": 227.5, "y": 155}, {"x": 268.5, "y": 142}, {"x": 291.5, "y": 139},
                 {"x": 315.5, "y": 153}, {"x": 318.5, "y": 171}, {"x": 320.5, "y": 192}, {"x": 324.5, "y": 253},
                 {"x": 327.5, "y": 287}, {"x": 330.5, "y": 314}, {"x": 332.5, "y": 330}, {"x": 333.5, "y": 363},
                 {"x": 327.5, "y": 373}, {"x": 317.5, "y": 379}, {"x": 258.5, "y": 387}, {"x": 215.5, "y": 387},
                 {"x": 166.5, "y": 385}, {"x": 126.5, "y": 383}, {"x": 79.5, "y": 379}, {"x": 21.5, "y": 373},
                 {"x": 13.5, "y": 370}, {"x": 16.5, "y": 369}, {"x": 26.5, "y": 364}, {"x": 85.5, "y": 348},
                 {"x": 128.5, "y": 343}, {"x": 168.5, "y": 341}, {"x": 215.5, "y": 340}, {"x": 285.5, "y": 348},
                 {"x": 303.5, "y": 353}, {"x": 312.5, "y": 359}, {"x": 309.5, "y": 364}, {"x": 302.5, "y": 368},
                 {"x": 289.5, "y": 373}, {"x": 274.5, "y": 374}, {"x": 228.5, "y": 372}, {"x": 199.5, "y": 367},
                 {"x": 145.5, "y": 353}, {"x": 127.5, "y": 346}, {"x": 111.5, "y": 338}, {"x": 103.5, "y": 325},
                 {"x": 105.5, "y": 318}, {"x": 110.5, "y": 311}, {"x": 121.5, "y": 300}, {"x": 137.5, "y": 288},
                 {"x": 178.5, "y": 268}, {"x": 208.5, "y": 258}, {"x": 232.5, "y": 251}, {"x": 283.5, "y": 242},
                 {"x": 305.5, "y": 240}, {"x": 320.5, "y": 239}, {"x": 353.5, "y": 239}, {"x": 361.5, "y": 239},
                 {"x": 369.5, "y": 240}, {"x": 373.5, "y": 240}, {"x": 373.5, "y": 239}, {"x": 373.5, "y": 236},
                 {"x": 373.5, "y": 231}, {"x": 372.5, "y": 227}, {"x": 370.5, "y": 219}, {"x": 363.5, "y": 204},
                 {"x": 357.5, "y": 196}, {"x": 344.5, "y": 184}, {"x": 311.5, "y": 164}, {"x": 292.5, "y": 156},
                 {"x": 270.5, "y": 149}, {"x": 250.5, "y": 144}, {"x": 198.5, "y": 137}, {"x": 175.5, "y": 137},
                 {"x": 154.5, "y": 139}, {"x": 124.5, "y": 147}, {"x": 115.5, "y": 150}, {"x": 111.5, "y": 153},
                 {"x": 110.5, "y": 156}, {"x": 111.5, "y": 156}, {"x": 111.5, "y": 155}, {"x": 112.5, "y": 153},
                 {"x": 113.5, "y": 151}, {"x": 113.5, "y": 147}, {"x": 111.5, "y": 143}, {"x": 101.5, "y": 136},
                 {"x": 92.5, "y": 133}, {"x": 65.5, "y": 125}, {"x": 50.5, "y": 122}, {"x": 27.5, "y": 117},
                 {"x": 33.5, "y": 114}, {"x": 42.5, "y": 113}, {"x": 82.5, "y": 111}, {"x": 110.5, "y": 111},
                 {"x": 167.5, "y": 116}, {"x": 199.5, "y": 124}, {"x": 234.5, "y": 142}, {"x": 256.5, "y": 174},
                 {"x": 259.5, "y": 186}, {"x": 261.5, "y": 202}, {"x": 262.5, "y": 226}, {"x": 260.5, "y": 234},
                 {"x": 252.5, "y": 242}, {"x": 241.5, "y": 243}, {"x": 214.5, "y": 234}, {"x": 193.5, "y": 222},
                 {"x": 169.5, "y": 207}, {"x": 126.5, "y": 178}, {"x": 107.5, "y": 164}, {"x": 88.5, "y": 142},
                 {"x": 87.5, "y": 137}, {"x": 103.5, "y": 130}, {"x": 118.5, "y": 129}, {"x": 175.5, "y": 134},
                 {"x": 203.5, "y": 139}, {"x": 238.5, "y": 147}, {"x": 309.5, "y": 166}, {"x": 342.5, "y": 179},
                 {"x": 398.5, "y": 212}, {"x": 419.5, "y": 230}, {"x": 458.5, "y": 270}, {"x": 475.5, "y": 289},
                 {"x": 492.5, "y": 305}, {"x": 526.5, "y": 325}, {"x": 537.5, "y": 326}, {"x": 556.5, "y": 320},
                 {"x": 564.5, "y": 309}, {"x": 580.5, "y": 280}, {"x": 596.5, "y": 249}, {"x": 605.5, "y": 232},
                 {"x": 619.5, "y": 203}, {"x": 624.5, "y": 189}, {"x": 634.5, "y": 163}, {"x": 642.5, "y": 139},
                 {"x": 646.5, "y": 126}, {"x": 652.5, "y": 100}, {"x": 656.5, "y": 80}, {"x": 657.5, "y": 71},
                 {"x": 657.5, "y": 63}, {"x": 657.5, "y": 64}, {"x": 656.5, "y": 66}, {"x": 650.5, "y": 83},
                 {"x": 647.5, "y": 95}, {"x": 644.5, "y": 112}, {"x": 636.5, "y": 148}, {"x": 630.5, "y": 174},
                 {"x": 614.5, "y": 227}, {"x": 600.5, "y": 257}, {"x": 570.5, "y": 304}, {"x": 551.5, "y": 324},
                 {"x": 524.5, "y": 344}, {"x": 492.5, "y": 353}, {"x": 479.5, "y": 349}, {"x": 475.5, "y": 327},
                 {"x": 477.5, "y": 307}, {"x": 496.5, "y": 257}, {"x": 515.5, "y": 230}, {"x": 562.5, "y": 192},
                 {"x": 582.5, "y": 183}, {"x": 602.5, "y": 180}, {"x": 627.5, "y": 197}, {"x": 632.5, "y": 216},
                 {"x": 624.5, "y": 277}, {"x": 611.5, "y": 302}, {"x": 556.5, "y": 348}, {"x": 526.5, "y": 356},
                 {"x": 482.5, "y": 353}, {"x": 469.5, "y": 341}, {"x": 468.5, "y": 311}, {"x": 477.5, "y": 291},
                 {"x": 492.5, "y": 273}, {"x": 547.5, "y": 242}, {"x": 584.5, "y": 237}, {"x": 686.5, "y": 251},
                 {"x": 729.5, "y": 270}, {"x": 743.5, "y": 368}, {"x": 715.5, "y": 369}, {"x": 682.5, "y": 365},
                 {"x": 649.5, "y": 344}, {"x": 648.5, "y": 335}, {"x": 659.5, "y": 316}, {"x": 674.5, "y": 305},
                 {"x": 706.5, "y": 294}, {"x": 720.5, "y": 293}, {"x": 737.5, "y": 294}, {"x": 742.5, "y": 289},
                 {"x": 719.5, "y": 285}, {"x": 688.5, "y": 281}, {"x": 625.5, "y": 280}, {"x": 599.5, "y": 280},
                 {"x": 553.5, "y": 285}, {"x": 543.5, "y": 286}, {"x": 540.5, "y": 286}, {"x": 541.5, "y": 286},
                 {"x": 541.5, "y": 287}, {"x": 542.5, "y": 287}, {"x": 542.5, "y": 286}, {"x": 542.5, "y": 285},
                 {"x": 542.5, "y": 284}, {"x": 542.5, "y": 282}, {"x": 542.5, "y": 281}, {"x": 542.5, "y": 279},
                 {"x": 542.5, "y": 278}, {"x": 542.5, "y": 277}, {"x": 542.5, "y": 276}, {"x": 542.5, "y": 275},
                 {"x": 542.5, "y": 274}, {"x": 543.5, "y": 272}, {"x": 543.5, "y": 271}, {"x": 543.5, "y": 270},
                 {"x": 544.5, "y": 269}, {"x": 545.5, "y": 268}, {"x": 546.5, "y": 267}, {"x": 549.5, "y": 265},
                 {"x": 552.5, "y": 264}, {"x": 554.5, "y": 264}, {"x": 568.5, "y": 263}, {"x": 575.5, "y": 263},
                 {"x": 582.5, "y": 263}, {"x": 587.5, "y": 264}, {"x": 594.5, "y": 265}, {"x": 603.5, "y": 266},
                 {"x": 606.5, "y": 267}, {"x": 608.5, "y": 267}, {"x": 608.5, "y": 268}, {"x": 608.5, "y": 267},
                 {"x": 608.5, "y": 266}, {"x": 608.5, "y": 265}, {"x": 608.5, "y": 264}, {"x": 609.5, "y": 263},
                 {"x": 609.5, "y": 264}, {"x": 610.5, "y": 264}, {"x": 611.5, "y": 264}, {"x": 612.5, "y": 263},
                 {"x": 613.5, "y": 262}, {"x": 615.5, "y": 260}, {"x": 619.5, "y": 257}, {"x": 620.5, "y": 255},
                 {"x": 622.5, "y": 254}, {"x": 623.5, "y": 253}, {"x": 626.5, "y": 250}, {"x": 626.5, "y": 249},
                 {"x": 627.5, "y": 248}, {"x": 628.5, "y": 247}, {"x": 628.5, "y": 246}, {"x": 628.5, "y": 245},
                 {"x": 629.5, "y": 245}, {"x": 629.5, "y": 244}, {"x": 630.5, "y": 244}, {"x": 630.5, "y": 245},
                 {"x": 630.5, "y": 247}, {"x": 631.5, "y": 252}, {"x": 632.5, "y": 255}, {"x": 632.5, "y": 258},
                 {"x": 632.5, "y": 262}, {"x": 632.5, "y": 265}, {"x": 632.5, "y": 266}, {"x": 632.5, "y": 265},
                 {"x": 634.5, "y": 264}, {"x": 635.5, "y": 262}, {"x": 640.5, "y": 256}, {"x": 644.5, "y": 251},
                 {"x": 648.5, "y": 247}, {"x": 658.5, "y": 234}, {"x": 660.5, "y": 229}, {"x": 664.5, "y": 222},
                 {"x": 667.5, "y": 212}, {"x": 668.5, "y": 207}, {"x": 669.5, "y": 202}, {"x": 669.5, "y": 198},
                 {"x": 669.5, "y": 192}, {"x": 669.5, "y": 190}, {"x": 670.5, "y": 189}, {"x": 670.5, "y": 187},
                 {"x": 670.5, "y": 186}, {"x": 671.5, "y": 186}, {"x": 671.5, "y": 185}])
chaikin = Stroke(tuple_points=chaikin_smooth(stroke.to_py(), iterations=3))
rdped = Stroke(tuple_points=rdp(stroke.to_py(), epsilon=1))
rdped_chaikin = Stroke(tuple_points=chaikin_smooth(rdped.to_py(), iterations=3))

print(len(stroke))
print(len(chaikin))
print(len(rdped))
print(len(rdped_chaikin))

stroke.save('Original')
chaikin.save('Chaikin')
rdped.save('Ramer-Douglas-Peucker')
rdped_chaikin.save('RDPed Chaikin')

plt.legend(['Original', 'Chaikin', 'Ramer-Douglas-Peucker (RDP)', 'RDPed Chaikin'])

# plt.show()
